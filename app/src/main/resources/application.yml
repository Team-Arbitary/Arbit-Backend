server:
  port: 5509

base-url:
  context: /transformer-thermal-inspection

# Analysis API configuration
analysis:
  api:
    url: http://192.248.10.121:8000

log:
  identifierKey: UUID
  isDebug: true

info:
  app:
    name: base-template
    msName: base-template

spring:
  datasource:
    url: jdbc:postgresql://dpg-d3gb8du3jp1c73ek2cl0-a.singapore-postgres.render.com:5432/transformer_inspection_db
    username: transformer_inspection_db_user
    password: b0NTLBIGpuUPM5FIQqqgvuh8gkEJZExX
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      leak-detection-threshold: 60000
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

  jpa:
    hibernate:
      ddl-auto: update   # options: validate | update | create | create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        format_sql: true

rest:
  connect-timeout: 5000
  read-timeout: 20000

# Actuator configuration for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    com.uom.Software_design_competition: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
