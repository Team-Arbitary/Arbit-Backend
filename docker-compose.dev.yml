version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: transformer-inspection-db-dev
    environment:
      POSTGRES_DB: trasformer_inspection_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Optional: Mount init scripts
      # - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-network

  # Spring Boot Application (Development mode)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: transformer-inspection-app-dev
    ports:
      - "5509:5509"  # Application port
      - "5005:5005"  # Debug port
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/trasformer_inspection_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_PROFILES_ACTIVE: dev
      LOGGING_LEVEL_COM_UOM: DEBUG
    volumes:
      # Mount source code for hot reload
      - ./app/src:/app/src
      # Preserve Maven dependencies
      - maven_cache:/root/.m2
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - dev-network
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  maven_cache:
    driver: local
  pgadmin_data:
    driver: local

networks:
  dev-network:
    driver: bridge
